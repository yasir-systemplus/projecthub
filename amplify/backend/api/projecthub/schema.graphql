# Reviewed
type Workspace @model @key(name: "byUser", fields: ["managerID"]) {
  id: ID!
  title: String!
  description: String
  image: String

  managerID: ID!
  manager: User @connection(fields: ["managerID"])

  projects: [Project]! @connection(keyName: "byWorkspace", fields: ["id"])

  teamMembers: [WorkspaceMember]!
    @connection(keyName: "byWorkspace", fields: ["id"])
}

type User @model {
  email: AWSEmail!
  emailVerfied: Boolean
  firstName: String
  id: ID!
  lastName: String
  phoneNumber: String
  phoneNumberVerified: Boolean
  userType: String!
  profileURL: String

  workspacesBeingManaged: [Workspace]!
    @connection(keyName: "byUser", fields: ["id"])

  workspaces: [WorkspaceMember]!
    @connection(keyName: "byTeamMember", fields: ["id"])

  projectsJoined: [ProjectMember]!
    @connection(keyName: "byUser", fields: ["id"])
}

type ProjectMember
  @model(queries: null)
  @key(name: "byProject", fields: ["projectID", "userID"])
  @key(name: "byUser", fields: ["userID", "projectID"]) {
  id: ID!

  projectID: ID!
  project: Project! @connection(fields: ["projectID"])

  userID: ID!
  user: User! @connection(fields: ["userID"])
}

type Project
  @model
  @key(name: "byWorkspace", fields: ["workspaceID"])
  @key(name: "byProject", fields: ["id"]) {
  id: ID!
  title: String!
  description: String

  workspaceID: ID!
  workspace: Workspace @connection(fields: ["workspaceID"])

  teamLeadID: ID!
  teamLead: User @connection(fields: ["teamLeadID"])

  tasks: [Task]! @connection(keyName: "byProject", fields: ["id"])
  projectMembers: [ProjectMember]!
    @connection(keyName: "byProject", fields: ["id"])
}

# Reviewed
type WorkspaceMember
  @model(queries: null)
  @key(name: "byWorkspace", fields: ["workspaceID", "teamMemberID"])
  @key(name: "byTeamMember", fields: ["teamMemberID", "workspaceID"]) {
  id: ID!

  workspaceID: ID!
  workspace: Workspace! @connection(fields: ["workspaceID"])

  teamMemberID: ID!
  teamMember: User! @connection(fields: ["teamMemberID"])
}

# Reviewed
type Task @model @key(name: "byProject", fields: ["projectID"]) {
  id: ID!
  title: String!
  priority: String
  description: String
  taskStatus: String
  deadLine: String!

  projectID: ID!
  project: Project @connection(fields: ["projectID"])

  creatorID: ID!
  creator: User @connection(fields: ["creatorID"])

  assigneeID: ID!
  assignee: User @connection(fields: ["assigneeID"])

  attachments: [Attachment]! @connection(fields: ["id"])
  comments: [Comment]! @connection(fields: ["id"])
}

type Comment
  @model
  @key(name: "byTask", fields: ["taskID"])
  @key(name: "byCommentedOnID", fields: ["commentedOnID"])
  @key(name: "byAttachment", fields: ["attachmentID"]) {
  id: ID!
  description: String!
  taskID: ID!

  commentatorID: ID!
  commentator: User @connection(fields: ["commentatorID"])

  commentedOnID: ID

  attachmentID: ID

  replies: [Comment]! @connection(fields: ["id"])
}

#Reviewed
type Attachment @model @key(name: "byTask", fields: ["taskID"]) {
  id: ID!
  url: AWSURL!
  taskID: ID
  task: Task @connection(fields: ["taskID"])

  comments: [Comment]! @connection(keyName: "byAttachment", fields: ["id"])
}
