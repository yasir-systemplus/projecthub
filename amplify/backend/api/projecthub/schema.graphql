# Reviewed
type Workspace @model {
  id: ID!
  title: String!
  description: String

  managerID: ID!
  manager: User @connection(fields: ["managerID"])

  teamMembers: [WorkspaceMember]
    @connection(keyName: "byWorkspace", fields: ["id"])
}

# Reviewed
type WorkspaceMember
  @model(queries: null)
  @key(name: "byWorkspace", fields: ["workspaceID", "teamMemberID"])
  @key(name: "byTeamMember", fields: ["teamMemberID", "workspaceID"]) {
  id: ID!

  workspaceID: ID!
  workspace: Workspace! @connection(fields: ["workspaceID"])

  teamMemberID: ID!
  teamMember: User! @connection(fields: ["teamMemberID"])
}

# Reviewed
type User @model {
  id: ID!
  email: AWSEmail!
  firstName: String
  lastName: String
  userType: String!

  workspaces: [WorkspaceMember]
    @connection(keyName: "byTeamMember", fields: ["id"])
}

# Reviewed
type Task @model {
  id: ID!
  title: String!
  priority: String
  description: String
  taskStatus: String

  creatorID: ID!
  creator: User @connection(fields: ["creatorID"])

  assigneeID: ID!
  assignee: User @connection(fields: ["assigneeID"])

  attachments: [Attachment] @connection(fields: ["id"])
  comments: [Comment] @connection(fields: ["id"])
}

#
type Comment
  @model
  @key(name: "byTask", fields: ["taskID"])
  @key(name: "byCommentedOnID", fields: ["commentedOnID"])
  @key(name: "byAttachment", fields: ["attachmentID"]) {
  id: ID!
  description: String!
  taskID: ID!

  commentatorID: ID!
  commentator: User @connection(fields: ["commentatorID"])

  commentedOnID: ID

  attachmentID: ID

  replies: [Comment] @connection(fields: ["id"])
}

type Attachment @model @key(name: "byTask", fields: ["taskID"]) {
  id: ID!
  type: String!
  url: AWSURL!
  taskID: ID

  comments: [Comment] @connection(keyName: "byAttachment", fields: ["id"])
}
